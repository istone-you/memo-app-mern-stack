{"ast":null,"code":"import axios from \"axios\";\nconst baseURL = \"http://localhost:5000/api/v1\";\nconst getToken = () => localStorage.getItem(\"token\");\nconst axiosClient = axios.create({\n  baseURL: baseURL\n});\n\n//APIを叩く前の前処理\naxiosClient.interceptors.request.use(async config => {\n  return {\n    ...config,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      authorization: `Bearer ${getToken()}` //JWTトークンをヘッダーにセット\n    }\n  };\n});\n\naxiosClient.interceptors.response.use(response => {\n  return response;\n}, error => {\n  throw error.response;\n});\nexport default axiosClient;","map":{"version":3,"names":["axios","baseURL","getToken","localStorage","getItem","axiosClient","create","interceptors","request","use","config","headers","authorization","response","error"],"sources":["/home/ec2-user/notion-clone/client/src/api/axiosClient.js"],"sourcesContent":["import axios from \"axios\";\n\nconst baseURL = \"http://localhost:5000/api/v1\";\nconst getToken = () => localStorage.getItem(\"token\");\n\nconst axiosClient = axios.create({\n    baseURL: baseURL,\n});\n\n//APIを叩く前の前処理\naxiosClient.interceptors.request.use(async (config) => {\n    return {\n        ...config,\n        headers: {\n            \"Content-Type\": \"application/json\",\n            authorization: `Bearer ${getToken()}`, //JWTトークンをヘッダーにセット\n        },\n    };\n});\n\n\naxiosClient.interceptors.response.use(response => {\n    return response;\n}, (error) => {\n    throw error.response;\n});\n\nexport default axiosClient;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,8BAA8B;AAC9C,MAAMC,QAAQ,GAAGA,CAAA,KAAMC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AAEpD,MAAMC,WAAW,GAAGL,KAAK,CAACM,MAAM,CAAC;EAC7BL,OAAO,EAAEA;AACb,CAAC,CAAC;;AAEF;AACAI,WAAW,CAACE,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC,MAAOC,MAAM,IAAK;EACnD,OAAO;IACH,GAAGA,MAAM;IACTC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClCC,aAAa,EAAG,UAASV,QAAQ,EAAG,EAAC,CAAE;IAC3C;EACJ,CAAC;AACL,CAAC,CAAC;;AAGFG,WAAW,CAACE,YAAY,CAACM,QAAQ,CAACJ,GAAG,CAACI,QAAQ,IAAI;EAC9C,OAAOA,QAAQ;AACnB,CAAC,EAAGC,KAAK,IAAK;EACV,MAAMA,KAAK,CAACD,QAAQ;AACxB,CAAC,CAAC;AAEF,eAAeR,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}