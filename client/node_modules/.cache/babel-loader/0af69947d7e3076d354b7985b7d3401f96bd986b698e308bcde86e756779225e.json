{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/notion-clone/client/src/components/pages/Register.jsx\",\n  _s = $RefreshSig$();\nimport { Box, Button, TextField } from '@mui/material';\nimport React from 'react';\nimport { LoadingButton } from \"@mui/lab\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport authApi from '../../api/authApi';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const navigate = useNavigate();\n  const [usernameErrText, setUsernameErrText] = useState('');\n  const [passwordErrText, setPasswordErrText] = useState('');\n  const [confirmErrText, setConfirmErrText] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setUsernameErrText('');\n    setPasswordErrText('');\n    setConfirmErrText('');\n\n    //入力した値を取得\n    const data = new FormData(e.target);\n    const username = data.get('username').trim();\n    const password = data.get('password').trim();\n    const confirmPassword = data.get('confirmPassword').trim();\n    console.log(username);\n    console.log(password);\n    console.log(confirmPassword);\n    let error = false;\n    if (username === '') {\n      error = true;\n      setUsernameErrText('お名前を入力してください');\n    }\n    if (password === '') {\n      error = true;\n      setPasswordErrText('パスワードを入力してください');\n    }\n    if (confirmPassword === '') {\n      error = true;\n      setConfirmErrText('確認用パスワードを入力してください');\n    }\n    if (password !== confirmPassword) {\n      error = true;\n      setConfirmErrText('パスワードが一致しません');\n    }\n    if (error) {\n      return;\n    }\n    setLoading(true);\n\n    //新規登録APIを叩く\n    try {\n      const res = await authApi.register({\n        username,\n        password,\n        confirmPassword\n      });\n      setLoading(false);\n      localStorage.setItem('token', res.token);\n      console.log(\"新規登録に成功しました\");\n      navigate('/');\n    } catch (error) {\n      console.log(error);\n      const errors = error.data.errors;\n      errors.forEach(err => {\n        if (err.param === 'username') {\n          setUsernameErrText(err.msg);\n        }\n        if (err.param === 'password') {\n          setPasswordErrText(err.msg);\n        }\n        if (err.param === 'confirmPassword') {\n          setConfirmErrText(err.msg);\n        }\n      });\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      onSubmit: handleSubmit,\n      noValidate: true,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        id: \"username\",\n        label: \"\\u304A\\u540D\\u524D\",\n        margin: \"normal\",\n        name: \"username\",\n        required: true,\n        helperText: usernameErrText,\n        error: usernameErrText !== '',\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        id: \"password\",\n        label: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\",\n        margin: \"normal\",\n        name: \"password\",\n        type: \"password\",\n        required: true,\n        helperText: passwordErrText,\n        error: passwordErrText !== '',\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        id: \"confirmPassword\",\n        label: \"\\u78BA\\u8A8D\\u7528\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\",\n        margin: \"normal\",\n        name: \"confirmPassword\",\n        type: \"password\",\n        required: true,\n        helperText: confirmErrText,\n        error: confirmErrText !== '',\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n        sx: {\n          mt: 3,\n          mb: 2\n        },\n        fullWidth: true,\n        type: \"submit\",\n        loading: loading,\n        color: \"primary\",\n        variant: \"contained\",\n        children: \"\\u30A2\\u30AB\\u30A6\\u30F3\\u30C8\\u4F5C\\u6210\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      component: Link,\n      to: \"/login\",\n      children: \"\\u65E2\\u306B\\u30A2\\u30AB\\u30A6\\u30F3\\u30C8\\u3092\\u304A\\u6301\\u3061\\u306E\\u65B9\\u306F\\u3053\\u3061\\u3089\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Register, \"pcWQDhLciiiXzih1v7HGvKkS0oo=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["Box","Button","TextField","React","LoadingButton","Link","useNavigate","authApi","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Register","_s","navigate","usernameErrText","setUsernameErrText","passwordErrText","setPasswordErrText","confirmErrText","setConfirmErrText","loading","setLoading","handleSubmit","e","preventDefault","data","FormData","target","username","get","trim","password","confirmPassword","console","log","error","res","register","localStorage","setItem","token","errors","forEach","err","param","msg","children","component","onSubmit","noValidate","fullWidth","id","label","margin","name","required","helperText","disabled","fileName","_jsxFileName","lineNumber","columnNumber","type","sx","mt","mb","color","variant","to","_c","$RefreshReg$"],"sources":["/home/ec2-user/notion-clone/client/src/components/pages/Register.jsx"],"sourcesContent":["import { Box, Button, TextField } from '@mui/material'\nimport React from 'react'\nimport { LoadingButton } from \"@mui/lab\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport authApi from '../../api/authApi';\nimport { useState } from 'react';\n\nconst Register = () => {\n  const navigate = useNavigate();\n\n  const [usernameErrText, setUsernameErrText] = useState('');\n  const [passwordErrText, setPasswordErrText] = useState('');\n  const [confirmErrText, setConfirmErrText] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setUsernameErrText('');\n    setPasswordErrText('');\n    setConfirmErrText('');\n\n    //入力した値を取得\n    const data = new FormData(e.target);\n    const username = data.get('username').trim();\n    const password = data.get('password').trim();\n    const confirmPassword = data.get('confirmPassword').trim();\n    console.log(username);\n    console.log(password);\n    console.log(confirmPassword);\n\n    let error = false;\n\n    if (username === '') {\n      error = true;\n      setUsernameErrText('お名前を入力してください');\n    }\n    if (password === '') {\n      error = true;\n      setPasswordErrText('パスワードを入力してください');\n    }\n    if (confirmPassword === '') {\n      error = true;\n      setConfirmErrText('確認用パスワードを入力してください');\n    }\n    if (password !== confirmPassword) {\n      error = true;\n      setConfirmErrText('パスワードが一致しません');\n    }\n\n    if (error) {\n      return;\n    }\n\n    setLoading(true);\n\n    //新規登録APIを叩く\n    try {\n      const res = await authApi.register({\n        username,\n        password,\n        confirmPassword,\n      });\n      setLoading(false);\n      localStorage.setItem('token', res.token);\n      console.log(\"新規登録に成功しました\");\n      navigate('/');\n    } catch (error) {\n      console.log(error);\n      const errors = error.data.errors;\n      errors.forEach((err) => {\n        if (err.param === 'username') {\n          setUsernameErrText(err.msg);\n        }\n        if (err.param === 'password') {\n          setPasswordErrText(err.msg);\n        }\n        if (err.param === 'confirmPassword') {\n          setConfirmErrText(err.msg);\n        }\n      });\n      setLoading(false);\n    }\n  }\n  return (\n    <>\n      <Box component=\"form\" onSubmit={handleSubmit} noValidate>\n        <TextField\n          fullWidth\n          id=\"username\"\n          label=\"お名前\"\n          margin=\"normal\"\n          name=\"username\"\n          required\n          helperText={usernameErrText}\n          error={usernameErrText !== ''}\n          disabled={loading}\n        />\n        <TextField\n          fullWidth\n          id=\"password\"\n          label=\"パスワード\"\n          margin=\"normal\"\n          name=\"password\"\n          type=\"password\"\n          required\n          helperText={passwordErrText}\n          error={passwordErrText !== ''}\n          disabled={loading}\n        />\n        <TextField\n          fullWidth\n          id=\"confirmPassword\"\n          label=\"確認用パスワード\"\n          margin=\"normal\"\n          name=\"confirmPassword\"\n          type=\"password\"\n          required\n          helperText={confirmErrText}\n          error={confirmErrText !== ''}\n          disabled={loading}\n        />\n        <LoadingButton\n          sx={{ mt: 3, mb: 2 }}\n          fullWidth\n          type=\"submit\"\n          loading={loading}\n          color=\"primary\"\n          variant=\"contained\"\n        >アカウント作成\n        </LoadingButton>\n      </Box>\n      <Button component={Link} to=\"/login\">既にアカウントをお持ちの方はこちら</Button>\n    </>\n  )\n}\n\nexport default Register"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}